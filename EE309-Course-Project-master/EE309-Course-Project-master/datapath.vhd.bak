library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use work.all;

entity datapath is
port(
current_state : in std_logic_vector(4 downto 0);
instruction: in std_logic_vector(15 downto 0);
clr, clk: in std_logic;
);
end entity;

architecture struct of datapath is
signal RFA3,RFA2,RFA1,count_output: std_logic_vector(2 downto 0);
signal RF_write: std_logic;
begin
RF: entity work.register_file port map(D1 =>, D2 => ,D3 => ,A1 =>RFA1 ,A2=>RFA2 ,A3=> RFA3, clk => clk,write_signal => ,clr =>clr );
A3: entity work.A3 port map(ir3_5 => instruction(5 downto 3), ir9_11 => instruction(11 downto 9), count => , current_state =>current_state,output => RFA3);
A2: entity work.A2 port map(ir6_8 => instruction(8 downto 6), count => , current_state =>current_state,output => RFA2);
A1 entity work.A1 port map(ir9_11 => instruction(11 downto 9), current_state =>current_state,output => RFA1);


end architecture;